// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply from: 'config.gradle'

buildscript {
    repositories {
        google()
        jcenter()
        maven{ url 'https://maven.aliyun.com/repository/jcenter'}
        maven{ url 'https://maven.aliyun.com/repository/google'}
        maven { url 'https://jitpack.io' }
        maven {
            url uri('repo')
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.0.0'
        classpath "io.objectbox:objectbox-gradle-plugin:2.9.1"
        classpath 'com.github.VcStrong:ConstantPlugin:0.0.1'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven{ url 'https://maven.aliyun.com/repository/jcenter'}
        maven{ url 'https://maven.aliyun.com/repository/google'}
        maven { url "https://jitpack.io" }
        maven {
            url uri('repo')
        }
        mavenCentral()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
def modules = getSubprojects()
project('app') { p ->
    p.afterEvaluate {
        println "==============================================================="
        println "打包分支："+active.branch + "  包名：" +active.applicationId + "  版本：" + active.versionName
        println "==============================================================="
        modules.each() { module ->
            if (!ignorePackage.contains(module.name)) {
                if (allPackage) {
                    if (module != p) {
                        println p.name + "全功能打包，已添加模块:" + module.name
                        p.dependencies.add("implementation", project(':' + module.name))

                    } else {
                        println p.name + "全模块打包，重复或者不添加的模块:" + module.name
                    }
                } else {
                    if (needPackage.contains(module.name)) {
                        if (module != p) {
                            println p.name + "组件化打包，清单文件默认采用src/test/AndroidManifest.xml...加载模块:" + module.name
                            p.dependencies.add("implementation", project(':' + module.name))
                        }
                    }
                }
            }
        }
    }
}

